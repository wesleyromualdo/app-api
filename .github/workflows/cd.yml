name: Plataforma API - CD

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
      - develop 

permissions:
  id-token: write
  contents: read

env:
  ECS_SERVICE: ${{ fromJson('{"develop":"staging-plataforma", "main":"staging-code-review-api"}')[github.ref_name] }}
  ECS_CLUSTER: plataforma-cluster
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  ENV_FILE: ${{ fromJson('{"develop":"deploy/staging.env", "main":"deploy/production.env"}')[github.ref_name] }}
  VERSION: app-${{ github.sha }}
  AWS_ROLE_ARN: ${{ secrets.PRD_AWS_ROLE_ARN }}
 
 
jobs:
  build-app-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and send images to AWS
        id: build-docker-images
        uses: ./.github/actions/build-docker-images
        with:
          aws_iam_role: ${{ env.AWS_ROLE_ARN }}
          aws_region: ${{ env.AWS_REGION }}
          ecr_url: ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECS_SERVICE }}


  deploy-ecs-task:
    runs-on: ubuntu-latest
    needs:
      - build-app-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update ECS Service
        id: update-ecs-service
        uses: ./.github/actions/update-ecs-service
        with:
          aws_iam_role: ${{ env.AWS_ROLE_ARN }}
          aws_region: ${{ env.AWS_REGION }}
          ecr_url: ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECS_SERVICE }}
          ecs_service: ${{ env.ECS_SERVICE }}
          ecs_cluster: ${{ env.ECS_CLUSTER }}
          env_file: ${{ env.ENV_FILE }}
          version: ${{ env.VERSION }}
